<?php
// $Id$

/**
 * Implement hook_theme().
 */
function quicktabs_theme() {
  return array(
    // list quicktabs
    'quicktabs_admin_form_tabs' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function quicktabs_menu() {
  $items['admin/structure/quicktabs'] = array(
    'title' => 'Quicktabs',
    'description' => 'Create blocks of tabbed content.',
    'page callback' => 'quicktabs_list',
    'access callback' => 'user_access',
    'access arguments' => array('administer quicktabs'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/structure/quicktabs/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/structure/quicktabs/styles'] = array(
    'title' => 'Styles',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('quicktabs_styles'),
    'access arguments' => array('administer quicktabs'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/structure/quicktabs/add'] = array(
    'title' => 'Add quicktab',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('quicktabs_form', 'add'),
    'access arguments' => array('administer quicktabs'),
    'type' => MENU_LOCAL_ACTION,
  );
  $items['admin/structure/quicktabs/%quicktab/edit'] = array(
    'title' => 'Edit quicktab',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('quicktabs_form', 'edit', 3),
    'access arguments' => array('administer quicktabs'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/structure/quicktabs/%quicktab/delete'] = array(
    'title' => 'Delete quicktab',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('quicktabs_block_delete', 3),
    'access arguments' => array('administer quicktabs'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/structure/quicktabs/%quicktab/clone'] = array(
    'title' => 'Clone quicktab',
    'page callback' => 'quicktabs_clone',
    'page arguments' => array(3),
    'access arguments' => array('administer quicktabs'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implement hook_permission().
 */
function quicktabs_permission() {
  return array(
    'administer quicktabs' => array(
      'title' => t('Administer Quick Tabs'),
      'description' => t('Perform administration tasks for Quick Tabs module.'),
    ),
  );
}

/**
 * Implement hook_block_list().
 */
function quicktabs_block_list() {
  $blocks = array();
  $result = db_query("SELECT qtid, title FROM {quicktabs}");
  foreach ($result as $quicktab) {
    $blocks[$quicktab->qtid]['info'] = $quicktab->title;
    $blocks[$quicktab->qtid]['cache'] = BLOCK_NO_CACHE;
  }
  return $blocks;
}

/**
 * Implement hook_block_view().
 */
function quicktabs_block_view($delta = '') {
  $block = array();
  if ($quicktab = quicktab_load($delta)) {
    $block['subject'] = $quicktab->title;
    $block['content'] = $delta; //@todo
  }
  return $block;
}

/**
 * Load the quicktab data.
 */
function quicktab_load($qtid) {
  $quicktab = db_query("SELECT qtid, title, tabs, ajax, style FROM {quicktabs} WHERE qtid = :qtid", array(':qtid' => $qtid))->fetchObject();
  if (!$quicktab) {
    return FALSE;
  }

  $tabs = unserialize($quicktab->tabs);
  foreach ($tabs as $key => $tab) {
    $weight[$key] = $tab['weight'];
    if ($tab['type'] == 'qtabs' && $tab['qtid'] == $qtid) {
      unset($tabs[$key]);
      unset($weight[$key]);
    }
  }
  array_multisort($weight, SORT_ASC, $tabs);

  $quicktab->tabs = $tabs;
  return $quicktab;
}
